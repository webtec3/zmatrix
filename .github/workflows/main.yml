name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build_matrix:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        php_version: [8.4.0]
        mode: [normal, leak]
    name: PHP ${{ matrix.php_version }} - ${{ matrix.mode }}

    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v3

      - name: üíæ Cache compiled PHP
        id: cache-php
        uses: actions/cache@v3
        with:
          path: /usr/local/php
          key: php-${{ matrix.php_version }}-build

      - name: üß∞ Install required dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential autoconf libtool \
            php-dev php-pear \
            g++ pkg-config \
            libopenblas-dev libgomp1 wget valgrind

      - name: üêò Compile PHP (only if not cached)
        if: steps.cache-php.outputs.cache-hit != 'true'
        run: |
          sudo mkdir -p /src
          cd /src
          sudo wget -O php.tar.gz https://www.php.net/distributions/php-${{ matrix.php_version }}.tar.gz
          sudo tar -xf php.tar.gz --strip-components=1
          sudo ./configure \
            --prefix=/usr/local/php \
            --with-config-file-path=/usr/local/php/etc \
            --enable-debug
          sudo make -j$(nproc)
          sudo make install

      - name: üß≠ Add PHP to PATH
        run: echo "/usr/local/php/bin" >> $GITHUB_PATH

      - name: üîß Build ZMatrix extension
        run: |
          cd ${{ github.workspace }}
          phpize

          if [ "${{ matrix.mode }}" = "leak" ]; then
            export CFLAGS="-fsanitize=address -g -O1"
            export CXXFLAGS="-fsanitize=address -g -O1"
          fi

          ./configure
          make -j$(nproc)
          sudo make install

          sudo mkdir -p /usr/local/php/etc/conf.d
          echo "extension=zmatrix.so" | sudo tee /usr/local/php/etc/conf.d/zmatrix.ini

      - name: üß™ Run tests
        continue-on-error: true
        run: |
          export USE_ZEND_ALLOC=0

          if [ "${{ matrix.mode }}" = "leak" ]; then
            echo "üß† Running tests with Valgrind..."
            valgrind --leak-check=full --show-leak-kinds=all \
              --track-origins=yes --error-exitcode=1 \
              --log-file=valgrind.log \
              php tests/example.php || exit 1
          else
            echo "üß™ Running normal tests..."
            sudo make test TEST_PHP_EXECUTABLE="/usr/local/php/bin/php -dextension=zmatrix.so"
          fi

          # Custom tests (.tphp)
          if [ -d tests/.tphp ]; then
            for test_file in tests/.tphp/*.tphp; do
              echo "‚ñ∂Ô∏è Running $test_file..."
              php "$test_file" || exit 1
            done
          fi

      - name: üìÑ Show make test output
        if: always()
        run: cat php_test_results_*.txt || echo "No report available"

      - name: üß† Show Valgrind log (if leak mode)
        if: matrix.mode == 'leak' && always()
        run: cat valgrind.log || echo "No Valgrind output"
