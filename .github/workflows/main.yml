name: CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build_php:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        php_version: [8.4.0]

    steps:
      - name: ðŸ”„ Checkout
        uses: actions/checkout@v3

      - name: ðŸ§° Instalar dependÃªncias para build do PHP
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential autoconf libtool \
            bison re2c \
            g++ pkg-config wget

      - name: ðŸ“¥ Baixar e compilar PHP
        run: |
          mkdir php-src
          cd php-src
          wget -O php.tar.gz https://www.php.net/distributions/php-${{ matrix.php_version }}.tar.gz
          tar -xf php.tar.gz --strip-components=1
          ./configure \
            --prefix=$GITHUB_WORKSPACE/php-install \
            --enable-debug \
            --with-config-file-path=$GITHUB_WORKSPACE/php-install/etc
          make -j$(nproc)
          make install

      - name: ðŸ“¦ Exportar binÃ¡rios PHP
        uses: actions/upload-artifact@v4
        with:
          name: php-bin-${{ matrix.php_version }}
          path: php-install

  build_zmatrix:
    runs-on: ubuntu-22.04
    needs: build_php
    strategy:
      matrix:
        php_version: [8.4.0]
        mode: [normal, leak]

    steps:
      - name: ðŸ”„ Checkout
        uses: actions/checkout@v3

      - name: ðŸ“¥ Baixar PHP compilado
        uses: actions/download-artifact@v4
        with:
          name: php-bin-${{ matrix.php_version }}
          path: /usr/local/php

      - name: ðŸ§° Instalar dependÃªncias para extensÃ£o
        run: |
          sudo apt update
          sudo apt install -y \
            php-dev php-pear \
            libopenblas-dev libgomp1 \
            valgrind g++ pkg-config

      - name: ðŸ”§ Compilar extensÃ£o ZMatrix
        run: |
          export PATH="/usr/local/php/bin:$PATH"
          phpize

          if [ "${{ matrix.mode }}" = "leak" ]; then
            export CFLAGS="-fsanitize=address -g -O1"
            export CXXFLAGS="-fsanitize=address -g -O1"
          fi

          ./configure --with-php-config=/usr/local/php/bin/php-config
          make -j$(nproc)
          sudo make install

          sudo mkdir -p /usr/local/php/etc/conf.d
          echo "extension=zmatrix.so" | sudo tee /usr/local/php/etc/conf.d/zmatrix.ini

      - name: ðŸ§ª Rodar testes
        continue-on-error: true
        run: |
          export PATH="/usr/local/php/bin:$PATH"
          export USE_ZEND_ALLOC=0

          if [ "${{ matrix.mode }}" = "leak" ]; then
            echo "ðŸ§  Testes com Valgrind..."
            valgrind --leak-check=full --show-leak-kinds=all \
              --track-origins=yes --error-exitcode=1 \
              php tests/example.php || exit 1
          else
            echo "ðŸ§ª Testes normais com make test"
            sudo make test TEST_PHP_EXECUTABLE="/usr/local/php/bin/php -dextension=zmatrix.so"
          fi

          # Testes personalizados
          if [ -d tests/.tphp ]; then
            for test_file in tests/.tphp/*.tphp; do
              php "$test_file" || exit 1
            done
          fi

      - name: ðŸ“„ Exibir resultados
        if: always()
        run: cat php_test_results_*.txt || echo "Sem relatÃ³rio"
